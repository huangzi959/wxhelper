<?phpnamespace Loytor\Wxhelper\Wechat;use GuzzleHttp\Client;class Components{    const URL_CREATE_PREAUTHCODE = 'https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode';    const URL_QUERY_AUTH = 'https://api.weixin.qq.com/cgi-bin/component/api_query_auth';    const URL_AUTHORIZER_TOKEN = 'https://api.weixin.qq.com/cgi-bin/component/api_authorizer_token';    const URL_GET_AUTHORIZER_INFO = 'https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info';    const URL_GET_AUTHORIZER_OPTION = 'https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_option';    const URL_SET_AUTHORIZER_OPTION = 'https://api.weixin.qq.com/cgi-bin/component/api_set_authorizer_option';    const URL_JSCODE2SESSION = 'https://api.weixin.qq.com/sns/component/jscode2session';    private $last_errcode;    private $last_errmsg;    private $component_appid;    private $component_access_token;    public function __construct(string $component_appid, string $component_access_token)    {        $this->component_appid = $component_appid;        $this->component_access_token = $component_access_token;    }    public function getComponentId()    {        return $this->component_appid;    }    public function getComponentAccessToken()    {        return $this->component_access_token;    }    public function getLastError()    {        return [            'errcode' => $this->last_errcode ?: 0,            'errmsg' => $this->last_errmsg ?: 'no-error'        ];    }    private function _postData($url, $data)    {        $client = new Client;        $result = $client->request('POST', $url, [            'json' => $data        ]);        return $result->getBody();    }    private function _getData($url, $data)    {        $client = new Client();        $result = $client->request('GET', $url, [            'query' => $data        ]);        return $result->getBody();    }    /**     * 创建预授权码     */    public function createPreauthcode()    {        $result = $this->_postData(self::URL_CREATE_PREAUTHCODE, array(            'component_appid' => $this->component_appid        ));        if (isset($result['pre_auth_code'])) {            return $result['pre_auth_code'];        } else {            return false;        }    }    /**     * 使用授权码换取公众号的授权信息     * @param String $authorization_code 授权码     * @return array 公众账号授权信息:     * {     * "authorization_info":{     * "authorizer_appid": "授权公众账号的APPID(wxf8b4f85f3a794e77)",     * "authorizer_access_token": "授权的accesstoken",     * "expires_in": 7200,     * "authorizer_refresh_token": "用来刷新获取accesstoken的刷新令牌",     * "func_info": [     * {     * "funcscope_category": {     * "id": 1     * }     * ]     * }     * }     */    public function queryAuth($authorization_code)    {        $result = $this->_postData(self::URL_QUERY_AUTH, array(            'component_appid' => $this->component_appid,            'authorization_code' => $authorization_code        ));        if (isset($result['errcode'])) {            return null;        } else {            return $result;        }    }    /**     * 使用刷新令牌获取（刷新）授权公众号的令牌     * @param String $authorizer_appid 微信公众平台的APPID     * @param String $authorizer_refresh_token 刷新令牌     * @return mixed|null|string     */    public function refreshAuthorizerToken($authorizer_appid, $authorizer_refresh_token)    {        $result = $this->_postData(self::URL_AUTHORIZER_TOKEN, array(            'component_appid' => $this->component_appid,            'authorizer_appid' => $authorizer_appid,            'authorizer_refresh_token' => $authorizer_refresh_token        ));        if (isset($result['errcode'])) {            return null;        } else {            return $result;        }    }    /**     * 获取授权方的账户信息     * @param String $authorizer_appid 微信公众平台的APPID     * @return mixed|null|string     */    public function getAuthorizerInfo($authorizer_appid)    {        $result = $this->_postData(self::URL_GET_AUTHORIZER_INFO, array(            'component_appid' => $this->component_appid,            'authorizer_appid' => $authorizer_appid        ));        if (isset($result['errcode'])) {            return null;        } else {            return $result;        }    }    /**     * 获取授权方的选项设置信息     * @param String $authorizer_appid 微信公众平台的APPID     * @param String $option_name 选项配置名称     * @return mixed|null|string     */    public function getAuthorizerOption($authorizer_appid, $option_name)    {        $result = $this->_postData(self::URL_GET_AUTHORIZER_OPTION, array(            'component_appid' => $this->component_appid,            'authorizer_appid' => $authorizer_appid,            'option_name' => $option_name        ));        if (isset($result['errcode'])) {            return null;        } else {            return $result;        }    }    /**     * 设置授权方的选项信息     */    public function setAuthorizerOption($authorizer_appid, $option_name, $option_value)    {        $result = $this->_postData(self::URL_SET_AUTHORIZER_OPTION, array(            'component_appid' => $this->component_appid,            'authorizer_appid' => $authorizer_appid,            'option_name' => $option_name,            'option_value' => $option_value        ));        if (isset($result['errcode']) && $result['errcode'] === 0) {            return true;        } else {            return false;        }    }    /**     * 通过js_code 换取sesskey和openid     * https://api.weixin.qq.com/sns/component/jscode2session?appid=APPID&js_code=JSCODE&grant_type=authorization_code&component_appid=COMPONENT_APPID&component_access_token=ACCESS_TOKEN     *     * @param $wx_appid     * @param $js_code     *     * @return     *  [     *      "openid":“OPENID”,     *      "session_key":"SESSIONKEY"     *  ]     */    public function getWxappOpenidSessionKey(string $authorizer_appid = "", string $js_code = "")    {        $result = $this->_getData(self::URL_JSCODE2SESSION, array(            'appid' => $authorizer_appid,            'js_code' => $js_code,            'grant_type' => 'authorization_code',            'component_appid' => $this->component_appid,            'component_access_token' => $this->component_access_token,        ));        if (isset($result['openid']) && isset($result['session_key'])) {            return $result;        } else {            return false;        }    }}